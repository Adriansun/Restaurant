<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                version="1.0">
  <xsl:output method="html" encoding="UTF-8"/>
  
  <xsl:param name="includeXML" select="false"/>
  
  <!-- Following code is a modified version of the   -->
  <!-- subst function from the XSLT Standard Library -->
  <!-- http://sourceforge.net/projects/xsltsl/       -->
  <xsl:template name="subst">
    <xsl:param name="text"/>
    <xsl:param name="replace"/>
    
    <xsl:choose>
      <xsl:when test="string-length($replace) = 0">
        <xsl:value-of select="$text"/>
      </xsl:when>
      <xsl:when test="contains($text, $replace)">        
        <xsl:variable name="before" select="substring-before($text, $replace)"/>
        <xsl:variable name="after" select="substring-after($text, $replace)"/>
        <xsl:value-of select="$before"/>
        <xsl:text disable-output-escaping="yes">&lt;BR/&gt;</xsl:text>
        <xsl:call-template name="subst">
          <xsl:with-param name="text" select="$after"/>
          <xsl:with-param name="replace" select="$replace"/>
        </xsl:call-template>
      </xsl:when> 
      <xsl:otherwise>
        <xsl:value-of select="$text"/>  
      </xsl:otherwise>
    </xsl:choose>            
  </xsl:template>
  <!-- End of XSLT Standard Library code -->
  
  <xsl:template name="fixpara">
    <xsl:param name="text"/>
    
    <xsl:choose>
      <xsl:when test="contains($text, '&#10;')">
        <xsl:call-template name="subst">
          <xsl:with-param name="text" select="$text"/>
          <xsl:with-param name="replace" select="'&#10;'"/>
        </xsl:call-template>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="$text"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
  
  <xsl:template match="/">
    <HTML>
      <HEAD>
        <TITLE><xsl:value-of select="recipeml/recipe/head/title"/></TITLE>
      </HEAD>
      <BODY>
        <H1><xsl:value-of select="recipeml/recipe/head/title"/></H1>
        <xsl:for-each select="recipeml/recipe/ingredients/ing">
          <xsl:value-of select="amt/qty"/>
          <xsl:text> </xsl:text>
          <xsl:value-of select="amt/unit"/>
          <xsl:text> </xsl:text>
          <xsl:value-of select="item"/>
          <BR/>
        </xsl:for-each>
        <xsl:for-each select="recipeml/recipe/directions/step">
          <P>
            <xsl:call-template name="fixpara">
              <xsl:with-param name="text" select="."/>
            </xsl:call-template>
          </P>
        </xsl:for-each>
        <xsl:if test="$includeXML">
          <P>
            <A>
              <xsl:attribute name="href">
                <xsl:value-of select="$includeXML"/>
              </xsl:attribute>
              Get RecipeML version
            </A>
          </P>
        </xsl:if>
        <HR/>
        <P>
          <FONT SIZE="1">
            <A HREF="index.html">Back to index</A><BR/>
            Generated by <A HREF="http://largorecipes.sourceforge.net">
            <STRONG>LargoRecipes</STRONG></A>
          </FONT>
        </P>
      </BODY>
    </HTML>
  </xsl:template>
</xsl:stylesheet>

